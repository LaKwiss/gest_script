# .github/workflows/publish.yaml
name: Publish Release

# Se déclenche à chaque push sur la branche main
on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    # Utilise la dernière version d'Ubuntu pour exécuter le job
    runs-on: ubuntu-latest

    steps:
      # 1. Récupère le code source de votre dépôt
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Met en place l'environnement Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable" # ou 'beta', 'dev', 'master'

      # 3. Installe les dépendances du projet
      - name: Install dependencies
        run: flutter pub get

      # 4. Compile l'application pour Windows
      - name: Build Windows release
        run: flutter build windows --release

      # 5. Prépare le nom de la version et de l'archive
      - name: Prepare release name
        id: prepare_release
        # Crée un nom de version basé sur la date et l'heure (ex: release-2025-06-11-10-30)
        run: echo "TAG_NAME=release-$(date +'%Y-%m-%d-%H-%M')" >> $GITHUB_ENV

      # 6. Crée l'archive ZIP du build Windows
      # Le contenu du build se trouve dans build/windows/x64/runner/Release
      - name: Create ZIP archive
        run: |
          cd build/windows/x64/runner/Release
          zip -r ../../../../gest-script-windows.zip .
          cd ../../../../../

      # 7. Crée une nouvelle Release sur GitHub
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: Release ${{ env.TAG_NAME }}
          draft: false
          prerelease: false

      # 8. Uploade l'archive ZIP en tant qu'asset de la Release
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/gest-script-windows.zip
          asset_name: gest-script-windows.zip
          asset_content_type: application/zip
